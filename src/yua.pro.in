QT += core gui opengl dbus

greaterThan(QT_MAJOR_VERSION, 4): QT += widgets

CONFIG += c++11

TARGET = yua
TEMPLATE = app

DEFINES += 'YUA_VERSION=\'\"9\"\'' @EXTERNAL_NNEDI3_WEIGHTS@
# deactivate deinterlacing on 32 bit, as the build would fail
linux-g++-64: DEFINES += 'WITH_NNEDI3'

SOURCES += main.cpp\
    yua.cpp \
    common/webcam_display.cpp \
    common/rita.cpp \
    nasty_decoder.cpp \
    deinterlacer.cpp \
    audio_information.cpp \
    video_encoder.cpp \
    video_information.cpp \
    job.cpp \
    audio_encoder.cpp \
    yv12toyuy2.c \
    common/frame.cpp \
    scaler.cpp \
    common/throttle.cpp \
    common/gtimer.cpp \
    common/power_management.cpp \
    decoder_mothership.cpp \
    statid_generator.cpp \
    fps_conversion.cpp \
    yua_util.cpp

!linux-g++-32 {
SOURCES += \
    nnedi3.cpp \
    nnedi3_worker.cpp
}

!mac {
SOURCES += nnedi3_worker_step2.cpp
}


HEADERS  += yua.h \
    common/webcam_display.h \
    common/rita.h \
    nasty_decoder.h \
    deinterlacer.h \
    audio_information.h \
    video_encoder.h \
    progress_type.h \
    video_information.h \
    job.h \
    audio_encoder.h \
    conversion.h \
    yv12toyuy2.h \
    common/frame.h \
    scaler.h \
    common/throttle.h \
    common/gtimer.h \
    common/power_management.h \
    decoder_mothership.h \
    statid_generator.h \
    decoder.h \
    common/threadsafequeue.h \
    fps_conversion.h \
    yua_util.h

!linux-g++-32 {
HEADERS += \
    nnedi3.h \
    nnedi3_worker.h \
    nnedi3/nnedi3_constants.h
}


INCLUDEPATH += common


mac {
SOURCES += \
    nnedi3/nnedi3_extract_m8_i16_SSE2.s \
    nnedi3/nnedi3_castScale_SSE.s \
    nnedi3/nnedi3_computeNetwork0new_SSE2.s \
    nnedi3/nnedi3_dotProd_m32_m16_i16_SSE2.s \
    nnedi3/nnedi3_e0_m16_SSE2.s \
    nnedi3/nnedi3_uc2s64_SSE2.s \
    nnedi3/nnedi3_weightedAvgElliottMul5_m16_SSE2.s \
    nnedi3/nnedi3_processLine0_SSE2.s

SOURCES += nnedi3_worker_step2.s #stopped being able to compile this one without yua crashing regardless of optimizations when i moved to 10.8 (20130402)
}

linux-g++-64 {
SOURCES += \
    nnedi3/nnedi3_extract_m8_i16_SSE2_linux.s \
    nnedi3/nnedi3_castScale_SSE_linux.s \
    nnedi3/nnedi3_computeNetwork0new_SSE2_linux.s \
    nnedi3/nnedi3_dotProd_m32_m16_i16_SSE2_linux.s \
    nnedi3/nnedi3_e0_m16_SSE2_linux.s \
    nnedi3/nnedi3_uc2s64_SSE2_linux.s \
    nnedi3/nnedi3_weightedAvgElliottMul5_m16_SSE2_linux.s \
    nnedi3/nnedi3_processLine0_SSE2_linux.s
}

win32 {
SOURCES += \
    nnedi3/nnedi3_extract_m8_i16_SSE2_32.s \
    nnedi3/nnedi3_castScale_SSE_32.s \
    nnedi3/nnedi3_computeNetwork0new_SSE2_32.s \
    nnedi3/nnedi3_dotProd_m32_m16_i16_SSE2_32.s \
    nnedi3/nnedi3_e0_m16_SSE2_32.s \
    nnedi3/nnedi3_uc2s64_SSE2_32.s \
    nnedi3/nnedi3_weightedAvgElliottMul5_m16_SSE2_32.s \
    nnedi3/nnedi3_processLine0_SSE2_32.s
}

mac:ICON = yua.icns
win32:RC_FILE = yua.rc


INCLUDEPATH += \
../ffmpeg \
../fdk-aac/libAACenc/include \
../fdk-aac/libSYS/include \
../x264

LIBS += \
../ffmpeg/libavcodec/libavcodec.a \
../ffmpeg/libavformat/libavformat.a \
../ffmpeg/libavresample/libavresample.a \
../ffmpeg/libavutil/libavutil.a \
../ffmpeg/libswresample/libswresample.a \
../ffmpeg/libswscale/libswscale.a \
../fdk-aac/.libs/libfdk-aac.a \
../x264/libx264.a

QMAKE_CXXFLAGS += -D__STDC_CONSTANT_MACROS #for libavcodec/avcodec.h


LIBS += -lz
mac:LIBS += -lbz2 -liconv
win32:LIBS += "-Wl,--large-address-aware" #so yua can use more than 1.5 gigs of ram (20130607)

mac:LIBS += -framework CoreFoundation
mac:LIBS += -framework IOKit #for Power_Management
mac:LIBS += -framework AVFoundation -framework CoreVideo -framework CoreMedia -framework VideoDecodeAcceleration


RESOURCES += statid.qrc

mac: RESOURCES += yua_icon.qrc helpers/mac/helpers.qrc helpers/mac/nnedi3.qrc

